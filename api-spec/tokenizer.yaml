openapi: 3.0.3
info:
  title: Tokenizer API
  description: The Tokenizer API used for tokenizing and detokenizing data and other endpoints
  version: 0.0.0
servers:
  - url: { tokenizerBackend }
    variables:
      tokenizerBackend:
        default: http://localhost:3001
        description: The endpoint for the tokenizer backend
paths:
  /tokenize:
    post:
      summary: Submit metadata about a token that was uploaded to s3
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizeRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenizerResponse'
  /detokenize:
    post:
      summary: Get an S3 signed download URL for a token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetokenizeRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetokenizeResponse'
        '500':
        '404':
  /grant/set:
    post:
      summary: Create a grant for a token, of type store or read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetGrantRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetGrantResponse'
  /grant/verify:
    post:
      summary: Get an S3 signed download URL for a token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyGrantRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyGrantResponse'
  /metadata/get:
    post:
      summary: Get an S3 signed download URL for a token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMetadataRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMetadataResponse'

components:
  schemas:
    "SetGrantRequest": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string"
        },
        "tokenId": {
          "type": "string"
        },
        "grantType": {
          "$ref": "#/definitions/GrantType"
        }
      },
      "required": [
          "sessionId",
          "tokenId",
          "grantType"
      ],
      "additionalProperties": false
    },
    "GrantType": {
      "type": "string",
      "enum": [
          "read_token",
          "store_token"
      ]
    },
    "VerifyGrantRequest": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string"
        },
        "tokenId": {
          "type": "string"
        },
        "grantType": {
          "$ref": "#/definitions/GrantType"
        }
      },
      "required": [
          "sessionId",
          "tokenId",
          "grantType"
      ],
      "additionalProperties": false
    },
    "GetMetadataRequest": {
      "type": "object",
      "properties": {
        "tokenId": {
          "type": "string",
          "description": "Needs to be a UUID."
        }
      },
      "required": [
          "tokenId"
      ],
      "additionalProperties": false
    },
    "MetaData": {
      "anyOf": [
        {
          "$ref": "#/definitions/StringMeta"
        },
        {
          "$ref": "#/definitions/FileMeta"
        }
      ]
    },
    "StringMeta": {
      "type": "object",
      "properties": {
        "customFields": {
          "type": "object"
        },
        "dataType": {
          "type": "string",
          "const": "string"
        }
      },
      "required": [
          "dataType"
      ],
      "additionalProperties": false
    },
    "BaseMeta": {
      "type": "object",
      "properties": {
        "customFields": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    "FileMeta": {
      "type": "object",
      "properties": {
        "customFields": {
          "type": "object"
        },
        "dataType": {
          "type": "string",
          "const": "file"
        },
        "fileinfo": {
          "type": "object",
          "properties": {
            "filename": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "lastModified": {
              "type": "number"
            }
          },
          "required": [
              "filename"
          ],
          "additionalProperties": false
        }
      },
      "required": [
          "dataType",
          "fileinfo"
      ],
      "additionalProperties": false
    },
    "DetokenizeRequest": {
      "type": "object",
      "properties": {
        "tokenId": {
          "type": "string",
          "description": "Needs to be a UUID."
        }
      },
      "required": [
          "tokenId"
      ],
      "additionalProperties": false
    },
    "TokenizeRequest": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/MetaData"
        }
      },
      "required": [
          "metadata"
      ],
      "additionalProperties": false
    },
    "SetGrantResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "data": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
          "success",
          "data"
      ],
      "additionalProperties": false
    },
    "VerifyGrantResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "data": {
          "type": "object",
          "properties": {
            "valid": {
              "type": "boolean"
            }
          },
          "required": [
              "valid"
          ],
          "additionalProperties": false
        }
      },
      "required": [
          "success",
          "data"
      ],
      "additionalProperties": false
    },
    "GetMetadataResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "data": {
          "type": "object",
          "properties": {
            "metadata": {
              "$ref": "#/definitions/MetaData"
            }
          },
          "required": [
              "metadata"
          ],
          "additionalProperties": false
        }
      },
      "required": [
          "success",
          "data"
      ],
      "additionalProperties": false
    },
    "DetokenizeResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "data": {
          "type": "object",
          "properties": {
            "downloadUrl": {
              "type": "string"
            },
            "headers": {
              "$ref": "#/definitions/OutgoingHttpHeaders"
            }
          },
          "required": [
              "downloadUrl",
              "headers"
          ],
          "additionalProperties": false
        }
      },
      "required": [
          "success",
          "data"
      ],
      "additionalProperties": false
    },
    "OutgoingHttpHeaders": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/OutgoingHttpHeader"
          },
          {
            "not": { }
          }
        ]
      },
      "properties": { }
    },
    "NodeJS.Dict<OutgoingHttpHeader>": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/OutgoingHttpHeader"
          },
          {
            "not": { }
          }
        ]
      }
    },
    "OutgoingHttpHeader": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "TokenizerResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "data": {
          "type": "object",
          "properties": {
            "tokenId": {
              "type": "string"
            },
            "uploadUrl": {
              "type": "string"
            },
            "headers": {
              "$ref": "#/definitions/IncomingHttpHeaders"
            }
          },
          "required": [
              "tokenId",
              "uploadUrl",
              "headers"
          ],
          "additionalProperties": false
        }
      },
      "required": [
          "success",
          "data"
      ],
      "additionalProperties": false
    },
    "IncomingHttpHeaders": {
      "type": "object",
      "properties": {
        "accept": {
          "type": "string"
        },
        "accept-language": {
          "type": "string"
        },
        "accept-patch": {
          "type": "string"
        },
        "accept-ranges": {
          "type": "string"
        },
        "access-control-allow-credentials": {
          "type": "string"
        },
        "access-control-allow-headers": {
          "type": "string"
        },
        "access-control-allow-methods": {
          "type": "string"
        },
        "access-control-allow-origin": {
          "type": "string"
        },
        "access-control-expose-headers": {
          "type": "string"
        },
        "access-control-max-age": {
          "type": "string"
        },
        "access-control-request-headers": {
          "type": "string"
        },
        "access-control-request-method": {
          "type": "string"
        },
        "age": {
          "type": "string"
        },
        "allow": {
          "type": "string"
        },
        "alt-svc": {
          "type": "string"
        },
        "authorization": {
          "type": "string"
        },
        "cache-control": {
          "type": "string"
        },
        "connection": {
          "type": "string"
        },
        "content-disposition": {
          "type": "string"
        },
        "content-encoding": {
          "type": "string"
        },
        "content-language": {
          "type": "string"
        },
        "content-length": {
          "type": "string"
        },
        "content-location": {
          "type": "string"
        },
        "content-range": {
          "type": "string"
        },
        "content-type": {
          "type": "string"
        },
        "cookie": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "expect": {
          "type": "string"
        },
        "expires": {
          "type": "string"
        },
        "forwarded": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "if-match": {
          "type": "string"
        },
        "if-modified-since": {
          "type": "string"
        },
        "if-none-match": {
          "type": "string"
        },
        "if-unmodified-since": {
          "type": "string"
        },
        "last-modified": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "origin": {
          "type": "string"
        },
        "pragma": {
          "type": "string"
        },
        "proxy-authenticate": {
          "type": "string"
        },
        "proxy-authorization": {
          "type": "string"
        },
        "public-key-pins": {
          "type": "string"
        },
        "range": {
          "type": "string"
        },
        "referer": {
          "type": "string"
        },
        "retry-after": {
          "type": "string"
        },
        "sec-websocket-accept": {
          "type": "string"
        },
        "sec-websocket-extensions": {
          "type": "string"
        },
        "sec-websocket-key": {
          "type": "string"
        },
        "sec-websocket-protocol": {
          "type": "string"
        },
        "sec-websocket-version": {
          "type": "string"
        },
        "set-cookie": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "strict-transport-security": {
          "type": "string"
        },
        "tk": {
          "type": "string"
        },
        "trailer": {
          "type": "string"
        },
        "transfer-encoding": {
          "type": "string"
        },
        "upgrade": {
          "type": "string"
        },
        "user-agent": {
          "type": "string"
        },
        "vary": {
          "type": "string"
        },
        "via": {
          "type": "string"
        },
        "warning": {
          "type": "string"
        },
        "www-authenticate": {
          "type": "string"
        }
      },
      "additionalProperties": {
        "anyOf": [
          {
            "not": { }
          },
          {
            "type": [
              "string",
              "array"
            ]
          }
        ]
      }
    },
    "NodeJS.Dict<(string|string[])>": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "not": { }
          }
        ]
      }
    },
