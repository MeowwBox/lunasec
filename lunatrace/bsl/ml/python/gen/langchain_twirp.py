# -*- coding: utf-8 -*-
# Generated by https://github.com/verloop/twirpy/protoc-gen-twirpy.  DO NOT EDIT!
# source: langchain.proto

from google.protobuf import symbol_database as _symbol_database

from twirp.base import Endpoint
from twirp.server import TwirpServer
from twirp.client import TwirpClient

_sym_db = _symbol_database.Default()

class LangChainServer(TwirpServer):

	def __init__(self, *args, service, server_path_prefix="/twirp"):
		super().__init__(service=service)
		self._prefix = F"{server_path_prefix}/langchain.LangChain"
		self._endpoints = {
			"Summarize": Endpoint(
				service_name="LangChain",
				name="Summarize",
				function=getattr(service, "Summarize"),
				input=_sym_db.GetSymbol("langchain.SummarizeRequest"),
				output=_sym_db.GetSymbol("langchain.SummarizeResponse"),
			),
			"CleanWebpage": Endpoint(
				service_name="LangChain",
				name="CleanWebpage",
				function=getattr(service, "CleanWebpage"),
				input=_sym_db.GetSymbol("langchain.CleanWebpageRequest"),
				output=_sym_db.GetSymbol("langchain.CleanWebpageResponse"),
			),
			"Chat": Endpoint(
				service_name="LangChain",
				name="Chat",
				function=getattr(service, "Chat"),
				input=_sym_db.GetSymbol("langchain.ChatRequest"),
				output=_sym_db.GetSymbol("langchain.ChatResponse"),
			),
		}

class LangChainClient(TwirpClient):

	def Summarize(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/langchain.LangChain/Summarize",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("langchain.SummarizeResponse"),
			**kwargs,
		)

	def CleanWebpage(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/langchain.LangChain/CleanWebpage",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("langchain.CleanWebpageResponse"),
			**kwargs,
		)

	def Chat(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/langchain.LangChain/Chat",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("langchain.ChatResponse"),
			**kwargs,
		)
