name: goreleaser

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
#
#      - name: Set env.RELEASE_VERSION
#        run: echo "RELEASE_VERSION=$(echo $GITHUB_REF | cut -d'/' -f 3 | cut -d'-' -f 2)" >> $GITHUB_ENV

      - name: setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          registry-url: 'https://npm.pkg.github.com'

      - name: install lerna
        run: npm i -g lerna

      - name: lerna bootstrap
        run: lerna bootstrap

      - name: build production
        run: npm run compile:production

      - name: Configure CI Git User
        run: |
          git config --global user.name 'release-bot'
          git config --global user.email 'release-bot@lunasec.io'
          git remote set-url origin https://$GITHUB_ACTOR:$GITHUB_PAT@github.com/lunasec-io/lunasec-monorepo
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_PAT }}

      - name: Checkout and pull branch
        run: git checkout "${GITHUB_REF:11}" && git pull

      - name: Authenticate with Registry
        run: |
          yarn logout
          echo "@lunasec:registry=http://registry.npmjs.org/" > .npmrc
          echo "registry=http://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish package
        run: "npx lerna publish prepatch --yes --message 'chore: release new version'"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_PAT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_PAT }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          install-only: true

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create LunaSec infra release
        working-directory: go
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
